package main

import (
	"fmt"
)

/* 202. Happy Number
https://leetcode.com/problems/happy-number/description/

Напишите алгоритм для определения того, является ли число n счастливым.
Счастливое число — это число, определяемое следующим процессом:

Начиная с любого положительного целого числа, замените число суммой квадратов его цифр.
Повторяйте процесс, пока число не станет равным 1 (где оно и останется), или пока оно не зациклится бесконечно в цикле, который не включает 1.
Те числа, для которых этот процесс заканчивается на 1, являются счастливыми.
Верните true, если n является счастливым числом, и false, если нет.

Input: n = 19
Output: true
Explanation:
12 + 92 = 82
82 + 22 = 68
62 + 82 = 100
12 + 02 + 02 = 1
*/

func main() {
	fmt.Println(isHappy(19)) // true
}

// isHappy - определяет, является ли число счастливым.
// time: O(n) - где n - количество цифр в числе.
// space: O(n) - хранение пройденных чисел в мапе.
func isHappy(n int) bool {
	seen := make(map[int]bool) // мапа для отслеживания пройденных чисел

	for n != 1 && !seen[n] { // пока число не равно 1 и не было пройдено ранее
		seen[n] = true // помечаем число как пройденное
		sum := 0       // переменная для хранения суммы квадратов цифр числа
		for n > 0 {    // пока число больше 0
			digit := n % 10      // извлекаем последнюю цифру числа
			sum += digit * digit // добавляем квадрат цифры к сумме
			n /= 10              // удаляем последнюю цифру числа
		}
		n = sum // обновляем число до суммы квадратов его цифр
	}

	return n == 1 // возвращаем true, если число стало равным 1, иначе false
}
