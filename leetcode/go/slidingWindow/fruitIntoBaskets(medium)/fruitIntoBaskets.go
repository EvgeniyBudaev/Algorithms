package main

import "fmt"

/* 904. Fruit Into Baskets
https://leetcode.com/problems/fruit-into-baskets/description/

Вы посещаете ферму, на которой есть один ряд фруктовых деревьев, расположенных слева направо. Деревья представлены
целочисленным массивом фруктов, где Fruit[i] — тип фруктов, которые производит i-е дерево.

Вы хотите собрать как можно больше фруктов. Однако у владельца есть некоторые строгие правила, которые необходимо
соблюдать:

У вас есть только две корзины, и в каждую корзину можно положить только один вид фруктов. Количество фруктов, которое
может вместить каждая корзина, не ограничено.
Начиная с любого дерева по вашему выбору, вы должны собрать ровно по одному плоду с каждого дерева (включая стартовое
дерево), двигаясь вправо. Собранные фрукты должны поместиться в одну из ваших корзин.
Как только вы доберетесь до дерева с фруктами, которые не помещаются в ваши корзины, вы должны остановиться.
Учитывая целочисленный массив фруктов, верните максимальное количество фруктов, которые вы можете собрать.

Input: fruits = [1,2,1]
Output: 3
Пояснение: Мы можем выбрать из всех трех деревьев.

Input: fruits = [0,1,2,2]
Output: 3
Пояснение: Мы можем выбирать из деревьев [1,2,2].
Если бы мы начали с первого дерева, мы бы выбирали только из деревьев [0,1].

Input: fruits = [1,2,3,2,2]
Output: 4
Пояснение: Мы можем выбирать из деревьев [2,3,2,2].
Если бы мы начали с первого дерева, мы бы выбирали только из деревьев [1,2].
*/

func main() {
	fruits := []int{1, 2, 3, 2, 2}
	fmt.Println(totalFruit(fruits)) // Вывод: 4 // [2,3,2,2]
}

// totalFruit возвращает максимальное количество фруктов, которые можно собрать в двух корзинах.
func totalFruit(fruits []int) int {
	fruitMap := make(map[int]int) // Хранит количество фруктов каждого типа в текущем окне
	left, maxCount := 0, 0        // Левый указатель окна и максимальное количество фруктов

	for right := 0; right < len(fruits); right++ {
		rightFruit := fruits[right] // Фрукт на правом указателе
		fruitMap[rightFruit]++      // Увеличиваем количество текущего фрукта

		// Если в окне больше двух типов фруктов, сдвигаем left
		for len(fruitMap) > 2 {
			leftFruit := fruits[left] // Фрукт на левом указателе
			fruitMap[leftFruit]--     // Уменьшаем количество фрукта слева
			if fruitMap[leftFruit] == 0 {
				delete(fruitMap, leftFruit) // Удаляем фрукт из map, если его количество стало 0
			}
			left++
		}

		// Текущий размер окна
		currentWindow := right - left + 1
		// Обновляем максимальную длину окна
		maxCount = fruitMap[currentWindow]
	}

	return maxCount
}
