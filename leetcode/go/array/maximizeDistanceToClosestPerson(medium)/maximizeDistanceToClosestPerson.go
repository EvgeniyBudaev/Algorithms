package main

import (
	"fmt"
)

/* https://leetcode.com/problems/maximize-distance-to-closest-person/description/

Вам дан массив, представляющий ряд мест, где места[i] = 1 представляет человека, сидящего на i-м месте, а места[i] = 0
означает, что i-е место пусто (индексировано 0).
Есть хотя бы одно свободное место и сидит хотя бы один человек.
Алекс хочет сидеть на сиденье так, чтобы расстояние между ним и ближайшим к нему человеком было максимальным.
Верните это максимальное расстояние ближайшему человеку.

Input: seats = [1,0,0,0,1,0,1]
Output: 2
Объяснение:
Если Алекс сидит на втором свободном месте (т. е. на местах[2]), то расстояние до ближайшего человека равно 2.
Если Алекс сидит на любом другом открытом месте, расстояние до ближайшего человека равно 1.
Таким образом, максимальное расстояние до ближайшего человека равно 2.
*/

func main() {
	seats := []int{1, 0, 0, 0, 1, 0, 1}
	fmt.Println(maxDistToClosest(seats)) // 2
}

func maxDistToClosest(seats []int) int {
	prev := -1
	ans := 0

	for i := 0; i < len(seats); i++ {
		if seats[i] == 1 {
			if prev == -1 {
				ans = i
			} else {
				ans = max(ans, (i-prev)/2)
			}
			prev = i
		}
	}

	return max(ans, len(seats)-1-prev)
}
