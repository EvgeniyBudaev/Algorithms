package main

import "fmt"

/* 274. H-Index
https://leetcode.com/problems/h-index/description/

Дан массив целых чисел citations, где citations[i] — это количество цитирований, полученных исследователем для его i-й
статьи, вернуть h-индекс исследователя.

Согласно определению h-индекса в Википедии: h-индекс определяется как максимальное значение h, при котором данный
исследователь опубликовал не менее h статей, каждая из которых была процитирована не менее h раз.

Input: citations = [3,0,6,1,5]
Output: 3
Пояснение: [3,0,6,1,5] означает, что у исследователя всего 5 статей, и каждая из них получила 3, 0, 6, 1, 5 цитирований
соответственно.
Поскольку у исследователя есть 3 статьи, каждая из которых имеет не менее 3 цитирований, а оставшиеся две —
не более 3 цитирований, их индекс Хирша равен 3.
*/

func main() {
	citations := []int{3, 0, 6, 1, 5}
	fmt.Println(hIndex(citations)) // 3
}

// hIndex - вычисляет максимальный h-индекс исследователя на основе его цитирования статей.
// time: O(n), space: O(n)
func hIndex(citations []int) int {
	n := len(citations)         // Общее количество статей
	buckets := make([]int, n+1) // Массив для подсчета статей с определенным количеством цитирований

	// Считаем количество статей для каждого возможного h
	for _, c := range citations {
		// Если цитирования больше или равны общему количеству статей, увеличиваем счетчик статей с ≥n цитированиями
		if c >= n {
			buckets[n]++
			// Если цитирования меньше общего количества статей, увеличиваем счетчик статей с ≥c цитированиями
		} else {
			buckets[c]++
		}
	}

	count := 0 // Счетчик статей с ≥h цитированиями
	// Ищем максимальное h, где сумма статей с ≥h цитированиями ≥h
	for h := n; h >= 0; h-- {
		count += buckets[h] // Добавляем количество статей с ≥h цитированиями
		if count >= h {     // Если сумма статей с ≥h цитированиями ≥h, то это максимальный h-индекс
			return h
		}
	}
	return 0 // Если не найден максимальный h-индекс, возвращаем 0
}
