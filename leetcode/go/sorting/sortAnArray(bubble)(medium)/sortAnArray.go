package main

import (
	"fmt"
)

/* 912. Sort an Array (Bubble Sort)
https://leetcode.com/problems/sort-an-array/description/

Дан массив целых чисел nums, отсортируйте массив в порядке возрастания и верните его.

Вы должны решить задачу без использования каких-либо встроенных функций с временной сложностью O(nlog(n)) и с наименьшей
возможной пространственной сложностью

Input: nums = [5,2,3,1]
Output: [1,2,3,5]
Пояснение: После сортировки массива позиции некоторых чисел не меняются (например, 2 и 3), а позиции других чисел
меняются (например, 1 и 5).
*/

func main() {
	nums := []int{5, 2, 3, 1}
	fmt.Println(sortArray(nums)) // [1,2,3,5]
}

// sortArray - сортировка массива пузырьком.
// time: O(n^2), space: O(1)
func sortArray(nums []int) []int {
	return bubbleSort(nums) // Вызываем функцию сортировки пузырьком
}

// bubbleSort - сортировка пузырьком.
// time: O(n^2), space: O(1)
func bubbleSort(arr []int) []int {
	n := len(arr) // Длина массива

	for i := 0; i < n-1; i++ {
		swapped := false             // Флаг для отслеживания перестановок
		for j := 0; j < n-i-1; j++ { // Проходим по неотсортированной части массива
			if arr[j] > arr[j+1] { // Если текущий элемент больше следующего,
				// Меняем местами соседние элементы
				arr[j], arr[j+1] = arr[j+1], arr[j] // Перестановка элементов
				swapped = true                      // Устанавливаем флаг перестановки
			}
		}
		// Если за проход не было перестановок, массив уже отсортирован
		if !swapped {
			break
		}
	}

	return arr
}
