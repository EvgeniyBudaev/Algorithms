package main

import "fmt"

/* 277. Find the Celebrity
https://leetcode.ca/2016-09-02-277-Find-the-Celebrity/

Предположим, вы на вечеринке с n людьми, пронумерованными от 0 до n - 1, и среди них может быть одна знаменитость.
Определение знаменитости заключается в том, что все остальные n - 1 человек знают знаменитость, но знаменитость не знает
никого из них.

Теперь вы хотите узнать, кто эта знаменитость, или убедиться, что ее нет. Вам разрешено задавать только вопросы типа:
«Привет, A. Ты знаешь B?», чтобы получить информацию о том, знает ли A B. Вам нужно узнать знаменитость (или убедиться,
что ее нет), задав как можно меньше вопросов (в асимптотическом смысле).

Вам дана вспомогательная функция bool knows(a, b), которая сообщает вам, знает ли a b.
Реализуйте функцию int findCelebrity(n). Если на вечеринке будет ровно одна знаменитость, то она будет.

Верните метку знаменитости, если на вечеринке будет знаменитость. Если знаменитости нет, верните -1.

Input: graph = [[1,1,0],[0,1,0],[1,1,1]]
Output: 1
Объяснение: Есть три человека, помеченные как 0, 1 и 2. graph[i][j] = 1 означает, что человек i знает человека j,
в противном случае graph[i][j] = 0 означает, что человек i не знает человека j. Знаменитость — это человек,
помеченный как 1, потому что и 0, и 2 знают его, но 1 не знает никого.
*/

func main() {
	graph := [][]int{{1, 1, 0}, {0, 1, 0}, {1, 1, 1}}
	fmt.Println(findCelebrity(graph)) // Output: 1
}

// findCelebrity - решение задачи "Найти знаменитость".
// time: O(n), space: O(1)
func findCelebrity(graph [][]int) int {
	n := len(graph) // Количество человек на вечеринке
	if n == 0 {     // Если нет людей на вечеринке, то нет знаменитости
		return -1
	}

	// Функция knows заменена на проверку graph[a][b]
	knows := func(a, b int) bool {
		return graph[a][b] == 1 // Если a знает b, то вернет true, иначе false
	}

	// Шаг 1: Находим кандидата
	candidate := 0           // Первый человек на вечеринке
	for i := 1; i < n; i++ { // Проверяем всех остальных людей на вечеринке
		if knows(candidate, i) { // Если кандидат знает кого-то, то он не может быть знаменитостью
			candidate = i // Обновляем кандидата
		}
	}

	// Шаг 2: Проверяем, является ли кандидат знаменитостью
	for i := 0; i < n; i++ { // Проверяем всех людей на вечеринке
		if i == candidate { // Пропускаем кандидата
			continue
		}
		// Если кандидат знает кого-то или кто-то не знает кандидата, то это не знаменитость
		if knows(candidate, i) || !knows(i, candidate) {
			return -1
		}
	}

	return candidate // Возвращаем кандидата, если он знаменитость
}
