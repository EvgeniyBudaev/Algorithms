package main

import "fmt"

/* 69. Sqrt(x)
https://leetcode.com/problems/sqrtx/description/

Если задано неотрицательное целое число x, вернуть квадратный корень x, округленный до ближайшего целого числа.
Возвращаемое целое число также должно быть неотрицательным.
Вы не должны использовать никакую встроенную функцию или оператор экспоненты.
Например, не используйте pow(x, 0.5) в c++ или x ** 0.5 в python.

Input: x = 4
Output: 2
Пояснение: Квадратный корень из 4 равен 2, поэтому мы возвращаем 2.
*/

func main() {
	fmt.Println(mySqrt(4)) // 2
}

// mySqrt возвращает квадратный корень x, округленный до ближайшего целого числа.
//
//	time: O(log n), space: O(1)
func mySqrt(x int) int {
	// Определяем функцию проверки
	// Если i*i <= x, то i - это искомый корень
	good := func(i int) bool {
		return i*i <= x
	}

	left, right := 0, x+1 // Начальное значение

	// Бинарный поиск
	for right-left > 1 {
		mid := (left + right) / 2 // Вычисляем середину
		// Если mid*mid <= x, то mid - это искомый корень
		if good(mid) {
			left = mid // Переходим к правому краю
			// Если mid*mid > x, то mid - не является искомым корнем
		} else {
			right = mid // Переходим к левому краю
		}
	}

	return left // Возвращаем левую границу
}
