/*
Вам поручено погрузить некоторое количество коробок в один грузовик. Вам дан двумерный массив boxTypes,
где boxTypes[i] = [numberOfBoxesi, NumberOfUnitsPerBoxi]:

NumberOfBoxesi — количество ящиков типа i.
NumberOfUnitsPerBoxi — количество единиц в каждом ящике типа i.
Вам также дается целое число TruckSize, которое представляет собой максимальное количество коробок, которые можно
разместить в грузовике. Вы можете выбрать любые ящики для установки в грузовик, если их количество не превышает
TruckSize.

Верните максимальное общее количество единиц, которое можно разместить на грузовике.
*/

/*
Input: boxTypes = [[1,3],[2,2],[3,1]], truckSize = 4
Output: 8
Пояснение: Есть:
- 1 коробка первого типа, содержащая 3 единицы.
- 2 коробки второго типа по 2 единицы в каждой.
- 3 коробки третьего типа по 1 единице в каждой.
Вы можете взять все коробки первого и второго типа и одну коробку третьего типа.
Общее количество единиц будет = (1 * 3) + (2 * 2) + (1 * 1) = 8.
 */

/**
 * @param {number[][]} boxTypes
 * @param {number} truckSize
 * @return {number}
 */
var maximumUnits = function(boxTypes, truckSize) {
    // Сначала все коробки сортируются по количеству единиц в каждой коробке в порядке убывания.
    // Это делается для того, чтобы при заполнении грузовика сначала укладывались коробки с большим количеством единиц.
    const sortedBoxTypes = boxTypes.sort((a, b) => b[1] - a[1]);

    let countOfUnits = 0;

    // Итерация по отсортированным коробкам: Затем алгоритм проходит через каждую коробку в отсортированном списке.
    // Для каждой коробки определяется количество коробок, которые можно поместить в грузовик (allowedBoxes),
    // исходя из текущего объема грузовика (truckSize) и размера коробки. Количество помещенных коробок не может
    // превышать размер грузовика или размер самой большой коробки соответственно.
    for (let boxes of sortedBoxTypes) {
        let allowedBoxes = Math.min(boxes[0], truckSize);

        // После того как определено количество коробок, которое можно поместить, эта информация используется для
        // обновления общего количества единиц (countOfUnits), которые теперь находятся в грузовике, и уменьшения
        // оставшегося объема грузовика (truckSize). Общее количество единиц увеличивается на количество единиц в
        // помещенных коробках, умноженное на количество таких коробок.
        truckSize -= allowedBoxes;
        countOfUnits += allowedBoxes * boxes[1];

        // Если после попытки поместить коробки в грузовик оставшийся объем грузовика стал равен нулю, это означает,
        // что грузовик полностью загружен, и цикл прерывается.
        if (truckSize === 0) break;
    }

    // В конце работы алгоритма возвращается общее количество единиц, которое было помещено в грузовик.
    return countOfUnits;
};

const boxTypes = [[1,3],[2,2],[3,1]];
const truckSize = 4;
console.log(maximumUnits(boxTypes, truckSize)); // 8