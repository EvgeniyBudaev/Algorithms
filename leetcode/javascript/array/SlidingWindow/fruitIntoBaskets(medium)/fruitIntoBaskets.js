/* https://leetcode.com/problems/fruit-into-baskets/description/

Вы посещаете ферму, на которой есть один ряд фруктовых деревьев, расположенных слева направо. Деревья представлены
целочисленным массивом фруктов, где Fruit[i] — тип фруктов, которые производит i-е дерево.

Вы хотите собрать как можно больше фруктов. Однако у владельца есть некоторые строгие правила, которые необходимо
соблюдать:

У вас есть только две корзины, и в каждую корзину можно положить только один вид фруктов. Количество фруктов, которое
может вместить каждая корзина, не ограничено.
Начиная с любого дерева по вашему выбору, вы должны собрать ровно по одному плоду с каждого дерева (включая стартовое
дерево), двигаясь вправо. Собранные фрукты должны поместиться в одну из ваших корзин.
Как только вы доберетесь до дерева с фруктами, которые не помещаются в ваши корзины, вы должны остановиться.
Учитывая целочисленный массив фруктов, верните максимальное количество фруктов, которые вы можете собрать.

Input: fruits = [1,2,1]
Output: 3
Пояснение: Мы можем выбрать из всех трех деревьев.

Input: fruits = [0,1,2,2]
Output: 3
Пояснение: Мы можем выбирать из деревьев [1,2,2].
Если бы мы начали с первого дерева, мы бы выбирали только из деревьев [0,1].

Input: fruits = [1,2,3,2,2]
Output: 4
Пояснение: Мы можем выбирать из деревьев [2,3,2,2].
Если бы мы начали с первого дерева, мы бы выбирали только из деревьев [1,2].
*/

/**
 * @param {number[]} fruits
 * @return {number}
 */
var totalFruit = function(fruits) {
    const hashMap = new Map();
    let left = 0, maxLen = 0;
    for (let right = 0; right < fruits.length; right++) {
        const rightFruit = fruits[right];
        hashMap.set(rightFruit, hashMap.get(rightFruit) + 1 || 0);
        while (hashMap.size > 2) {
            const leftFruit = fruits[left];
            if (hashMap.get(leftFruit) === 0) {
                hashMap.delete(leftFruit);
            } else {
                hashMap.set(leftFruit, hashMap.get(leftFruit) - 1);
            }
            left++;
        }
        maxLen = Math.max(maxLen, right - left + 1);
    }
    return maxLen;
};

const fruits = [1,2,1];
console.log(totalFruit(fruits));