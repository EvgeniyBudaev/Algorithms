// https://www.youtube.com/watch?v=at9xNhYlXJ4&ab_channel=DevGym Объяснение Prefix Sum

/*
"Prefix Sum" - эт подход, который мы используем при работе с массивами и списками, содержащими целые числа.
Подход "Prefix Sum" очень удобный подход, когда задача связана с суммами элементов подмассивов.

Основная идея "Prefix Sum" - это создать некоторый массив prefix, в котором значение prefix[i] равно сумме элементов
до i индекса включительно.
Например: "На вход подается массив nums = [5, 2, 3, 6, 1, 4], гда наш prefix массив будет содержать следующие элементы
[5, 7, 10, 15, 16, 20]. Т.е. prefix[0] = 5, prefix[1] = 5 + 2, prefix[2] = 5+ 2 +3 и так далее.

Т.е. мы строим наш prefix массив за время О(n), а в дальнейшем вытаскиваем суммы элементов подмассивов за время О(1),
тем самым улучшая временную сложность алгоритма до О(n).
Подход "Prefix Sum" позволяет нам найти сумму элементов подмассивов за константное время, т.е. время O(1).

Если нам надо найти сумму подмассива от i до j индекса (включительно), тогда ответ будет равен prefix[j] - prefix[i] или
prefix[j]  - prefix[i] + nums[i] (второй вариант страхует нас от выхода за границы массива при i = 0).
Например:
nums = [5, 2, 3, 6, 1, 4]
prefix = [5, 7, 10, 16, 17, 21]
 */

const prefixSumRange = (arr, start, end) => {
    const prefix = [arr[0]];

    for (let i = 1; i < arr.length; i++) {
        prefix.push(arr[i] + prefix[prefix.length - 1]);
    }

    return prefix[end] - prefix[start] + arr[start];
}

console.log(prefixSumRange([5, 2, 3, 6, 1, 4], 0, 1)); // 7