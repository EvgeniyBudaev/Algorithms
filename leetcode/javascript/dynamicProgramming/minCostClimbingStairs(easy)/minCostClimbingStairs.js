// https://leetcode.com/problems/min-cost-climbing-stairs/description/

/*
Вам дан целочисленный массив Cost, где Cost[i] — стоимость i-й ступеньки лестницы. Заплатив стоимость, вы сможете
 подняться на одну или две ступеньки.
Вы можете начать либо с шага с индексом 0, либо с шага с индексом 1.
Возвращает минимальную стоимость достижения вершины этажа.
*/

/*
Input: cost = [10,15,20]
Output: 15
Пояснение: Вы начнете с индекса 1.
- Заплатите 15 и поднимитесь на две ступеньки, чтобы достичь вершины.
Общая стоимость 15.
*/

/*
Input: cost = [1,100,1,1,1,100,1,1,100,1]
Output: 6
Объяснение: Вы начнете с индекса 0.
- Заплатите 1 и поднимитесь на две ступеньки, чтобы достичь индекса 2.
- Заплатите 1 и поднимитесь на две ступеньки, чтобы достичь индекса 4.
- Заплатите 1 и поднимитесь на две ступеньки, чтобы достичь индекса 6.
- Заплатите 1 и поднимитесь на одну ступень, чтобы достичь индекса 7.
- Заплатите 1 и поднимитесь на две ступеньки, чтобы достичь индекса 9.
- Заплатите 1 и поднимитесь на одну ступеньку, чтобы достичь вершины.
Общая стоимость 6.
*/

/**
 * @param {number[]} cost
 * @return {number}
 */
var minCostClimbingStairs = function(cost) {
    const n = cost.length;

    for(let i = 2; i < n; i++) {
        cost[i] = Math.min(cost[i - 1], cost[i - 2]) + cost[i];
    }

    return Math.min(cost[n - 1], cost[n - 2]);
};

console.log(minCostClimbingStairs([10,15,20])); // 15